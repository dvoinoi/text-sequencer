'use strict';

var file = require('fs')
var midi = require('midi')
var output = new midi.output()
output.getPortCount()
output.getPortName(0)
output.openVirtualPort('Text Sequencer') // this will work only for linux & mac

// on app close
// output.closePort();

// check arguments are set
if (typeof process.argv[2] == 'undefined' || typeof process.argv[3] == 'undefined') {
    console.log('need text file & bpm parameters.')
    process.exit(1)
}

var fileName = process.argv[2]
var text = null
var bpm = 60000 / process.argv[3]

if (typeof process.argv[4] != 'undefined') {
    // extra grid params
    bpm = bpm / process.argv[4]
}

var loadFile = (callBack) => {
    try {
      text = file.readFileSync(fileName).toString()
      if (text == '') {
        text = ' '
      }
      callBack();
    } catch(e) {
      console.log(e)
      process.exit(1)
    }
}

var watchFileUpdate = () => {
    file.watchFile(fileName, (curr, prev) => {
        if (Date.parse(curr.mtime) > Date.parse(prev.mtime)) {
            loadFile(()=>{
                debug('file updated', "\n")
            })
        }
    });
}

var playNote = (i) => {
    var nextNote = i
    if(typeof text[nextNote] == 'undefined') {
       nextNote = 0
    }

    var noteNumber = text[nextNote].charCodeAt(0)

    debug(text[nextNote]+':'+noteNumber+' ')

    // play
    if (text[nextNote] != ' ' && text[nextNote] != "\n") { // silence!
        output.sendMessage([144, noteNumber, 127])
    }

    nextNote++;

    setTimeout((nextNote) => {
         playNote(nextNote)
      }, bpm, nextNote)

    // off, note length can be defined externally
    // so we are not really interested, as long as it does go off
    setTimeout((noteNumber) => {
         output.sendMessage([128, noteNumber, 40])
      }, bpm, noteNumber)

}

function main() {
    loadFile(() => {
        playNote(0)
        watchFileUpdate()
    });
}

function debug(w, end) {
    if (typeof process.argv[5] == 'undefined') {
        return
    }
    if (typeof end == 'undefined') {
        end = ''
    }
    process.stdout.write(w + end)
}

main();


